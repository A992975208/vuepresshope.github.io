import{_ as o,r,o as t,c as l,f as d,d as e,e as n,b as i,a as s}from"./app-4937edf6.js";const c={},p=e("h1",{id:"mac-本地部署安装-roop-从此换脸不求人",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mac-本地部署安装-roop-从此换脸不求人","aria-hidden":"true"},"#"),n(" Mac 本地部署安装 Roop，从此换脸不求人")],-1),h=e("p",null,"虽然市面有有不少现成的产品都提供了 AI 换脸功能，但是把脸部数据提供给别人总感觉怪怪的，也不太安全，后来在油管上了解到了一款可本地部署的开源换脸程序 Roop，赶紧搜点教程本地部署一个玩玩，顺便记录一下。",-1),m=e("h2",{id:"什么是-roop",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#什么是-roop","aria-hidden":"true"},"#"),n(" 什么是 Roop")],-1),u={href:"https://github.com/s0md3v/roop",target:"_blank",rel:"noopener noreferrer"},g={href:"https://roop-ai.gitbook.io/roop/",target:"_blank",rel:"noopener noreferrer"},b=e("div",{class:"hint-container warning"},[e("p",{class:"hint-container-title"},"注意"),e("p",null,"国内网络环境因素，以下的安装过程需要开启魔法 🪄 上网")],-1),v=e("h2",{id:"安装-roop",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装-roop","aria-hidden":"true"},"#"),n(" 安装 Roop")],-1),f={href:"https://roop-ai.gitbook.io/roop/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://brew.sh/index_zh-cn",target:"_blank",rel:"noopener noreferrer"},k={href:"https://brew.sh/index_zh-cn",target:"_blank",rel:"noopener noreferrer"},x=s(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Python</span>
brew <span class="token function">install</span> python@3.10
<span class="token comment"># PIP</span>
python <span class="token parameter variable">-m</span> ensurepip
<span class="token comment"># GIT</span>
brew <span class="token function">install</span> <span class="token function">git</span>
<span class="token comment"># FFmpeg</span>
brew <span class="token function">install</span> ffmpeg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="拉取代码" tabindex="-1"><a class="header-anchor" href="#拉取代码" aria-hidden="true">#</a> 拉取代码</h3><p>找一个目录使用 git 命令将项目仓库 clone 到本地。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/s0md3v/roop.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://image.liubing.me/i/2023/08/14/64d9780c71111.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h3 id="安装项目依赖" tabindex="-1"><a class="header-anchor" href="#安装项目依赖" aria-hidden="true">#</a> 安装项目依赖</h3><p>使用终端打开 roop 目录</p><figure><img src="https://image.liubing.me/i/2023/08/14/64d979092f0c9.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>执行下面的命令进行依赖安装，网络上好多教程都说的需要修改<code>requirements.txt</code>文件里面的依赖，我尝试了不修改也是可以安装成功的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待依赖全部安装完成即可，网络良好的可能几分钟就 OK 了。</p><figure><img src="https://image.liubing.me/i/2023/08/14/64d9798e1c570.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="运行-roop" tabindex="-1"><a class="header-anchor" href="#运行-roop" aria-hidden="true">#</a> 运行 Roop</h2><p>依赖完成后使用命令就能启动项目了，首次启动过程中还会额外安装一些依赖，耐心等待安装完成，启动完成后是一个可视化的界面，操作也非常简单。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python run.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>启动过程中如果报错了<code>tkinter</code>的相关错误，可以使用的命令安装<code>python-tk@3.10</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> python-tk@3.10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><figure><img src="https://image.liubing.me/i/2023/08/14/64d97b34c1695.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><p>大致翻译一下</p><figure><img src="https://image.liubing.me/i/2023/08/14/64d97b862df29.png" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><h2 id="加速-roop" tabindex="-1"><a class="header-anchor" href="#加速-roop" aria-hidden="true">#</a> 加速 Roop</h2>`,20),y={href:"https://roop-ai.gitbook.io/roop/installation/acceleration",target:"_blank",rel:"noopener noreferrer"},w=s(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Mac M系列</span>
pip uninstall onnxruntime onnxruntime-silicon
pip <span class="token function">install</span> onnxruntime-silicon<span class="token operator">==</span><span class="token number">1.13</span>.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后就可以在运行的时候加入相关的参数</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python run.py --execution-provider coreml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>生成速度虽然提高了，但是视频换脸经常性出现内存不足，低内存的 Mac 还是不要使用上面的命令进行视频换脸</p></div><h2 id="命令整理" tabindex="-1"><a class="header-anchor" href="#命令整理" aria-hidden="true">#</a> 命令整理</h2><p>网上也看了下教程，整理下自用的启动命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 低内存视频换脸容易内存不足，建议大内存或者仅图片换脸使用</span>
python  run.py --execution-provider coreml --execution-threads <span class="token number">4</span> --temp-frame-format jpg --frame-processor face_swapper face_enhancer --similar-face-distance <span class="token number">1.5</span>

<span class="token comment"># 低内存视频换脸使用，速度会慢点</span>
python run.py --temp-frame-format jpg --frame-processor face_swapper face_enhancer --similar-face-distance <span class="token number">1.5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),R={href:"https://roop-ai.gitbook.io/roop/knowledgebase/advanced-features",target:"_blank",rel:"noopener noreferrer"},z=e("h2",{id:"效果预览",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#效果预览","aria-hidden":"true"},"#"),n(" 效果预览")],-1),M=e("p",null,"抖音上找了个漂亮小姐姐的视频，用自己媳妇美颜后脸尝试替换了下，视频最终的脸部效果看着还是可以的。一下两张预览左边的媳妇的脸，右边是原作者的脸。",-1),I=e("figure",null,[e("img",{src:"https://image.liubing.me/i/2023/08/14/64d97e7f37431.png",alt:"image",tabindex:"0",loading:"lazy"}),e("figcaption",null,"image")],-1),N=e("figure",null,[e("img",{src:"https://image.liubing.me/i/2023/08/14/64d97e516ebde.png",alt:"image",tabindex:"0",loading:"lazy"}),e("figcaption",null,"image")],-1);function V(P,B){const a=r("ExternalLinkIcon");return t(),l("div",null,[p,h,d(" more "),m,e("p",null,[n("Roop 是一个可以简单的使用一张人脸照片一键操作就能实现照片或者视频进行 AI 换脸，效果基本上可以以假乱真，开源仓库地址可以"),e("a",u,[n("点击此处"),i(a)]),n("进行访问，文档相关部署教程可以"),e("a",g,[n("Roop 文档"),i(a)]),n("。")]),b,v,e("p",null,[e("a",f,[n("Roop 文档"),i(a)]),n("提供了 Linux、MacOS、Windows 安装教程，这里已 MacOS 为例。")]),e("p",null,[n("必备的安装工具"),e("a",_,[n("Homebrew"),i(a)]),n("，我相信用 Mac 的基本上都已经安装了，如果没有安装使用"),e("a",k,[n("Homebrew 文档"),i(a)]),n("上的一键安装命令终端执行下。已经安装了 Homebrew 的话执行下面的命令安装 Roop 项目的前置依赖，如已安装 Python 或者 Git 可以跳过安装。")]),x,e("p",null,[n("此时换脸生成图片和视频的速度还很慢，我们可以参考"),e("a",y,[n("加速文档"),i(a)]),n("，安装一些依赖项来提供生成的速度。")]),w,e("p",null,[n("具体的参数说明可以参考"),e("a",R,[n("文档高级功能"),i(a)]),n("或者自行搜索。")]),z,M,I,N])}const H=o(c,[["render",V],["__file","mac-deploy-roop.html.vue"]]);export{H as default};

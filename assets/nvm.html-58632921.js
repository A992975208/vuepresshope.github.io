import{_ as i,r,o,c as t,d as n,e,b as d,a}from"./app-1631cab8.js";const l="/assets/nvm-8e189076.png",c="/assets/vision-500d799e.png",v="/assets/nvm1-29094ab7.png",m={},p=a('<h1 id="nvm使用" tabindex="-1"><a class="header-anchor" href="#nvm使用" aria-hidden="true">#</a> nvm使用</h1><h1 id="_1-nvm介绍" tabindex="-1"><a class="header-anchor" href="#_1-nvm介绍" aria-hidden="true">#</a> 1.nvm介绍</h1><p>在工作中，我们可能同时在进行2个或者多个不同的项目开发，每个项目的需求不同，进而不同项目必须依赖不同版本的NodeJS运行环境，这种情况下，对于维护多个版本的node将会是一件非常麻烦的事情，nvm就是为解决这个问题而产生的，他可以方便的在同一台设备上进行多个node版本之间切换。</p><h1 id="_2-nvm下载以及使用" tabindex="-1"><a class="header-anchor" href="#_2-nvm下载以及使用" aria-hidden="true">#</a> 2.nvm下载以及使用</h1>',4),h={href:"https://github.com/coreybutler/nvm-windows/releases",target:"_blank",rel:"noopener noreferrer"},u=n("br",null,null,-1),_=n("img",{src:l,alt:"img_2.png",loading:"lazy"},null,-1),g=a(`<h1 id="_3-nvm安装如果之前电脑已经安装工过node-先把node卸载再安装nvm" tabindex="-1"><a class="header-anchor" href="#_3-nvm安装如果之前电脑已经安装工过node-先把node卸载再安装nvm" aria-hidden="true">#</a> 3.nvm安装如果之前电脑已经安装工过node，先把node卸载再安装nvm</h1><h1 id="_4-安装完毕之后查看nvm版本" tabindex="-1"><a class="header-anchor" href="#_4-安装完毕之后查看nvm版本" aria-hidden="true">#</a> 4.安装完毕之后查看nvm版本</h1><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>nvm <span class="token operator">-</span>v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+c+`" alt="img_3.png" tabindex="0" loading="lazy"><figcaption>img_3.png</figcaption></figure><h1 id="_5-nvm常用命令" tabindex="-1"><a class="header-anchor" href="#_5-nvm常用命令" aria-hidden="true">#</a> 5.nvm常用命令</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm <span class="token function">install</span> <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>       // 安装node.js的命名 version是版本号 例如：nvm <span class="token function">install</span> <span class="token number">8.12</span>.0
nvm uninstall <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>     // 卸载node.js是的命令，卸载指定版本的nodejs，当安装失败时卸载使用
nvm <span class="token function">ls</span>                      // 显示所有安装的node.js版本
nvm list available          // 显示可以安装的所有node.js的版本
nvm use <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>           // 切换到使用指定的nodejs版本
nvm <span class="token function">v</span>                       // 显示nvm版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+`" alt="img_4.png" tabindex="0" loading="lazy"><figcaption>img_4.png</figcaption></figure><h1 id="_6-nvm切换node版本" tabindex="-1"><a class="header-anchor" href="#_6-nvm切换node版本" aria-hidden="true">#</a> 6.nvm切换node版本</h1><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nvm use <span class="token number">20.2</span>.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9);function b(f,k){const s=r("ExternalLinkIcon");return o(),t("div",null,[p,n("p",null,[e("安装包地址"),n("a",h,[e("https://github.com/coreybutler/nvm-windows/releases"),d(s)]),u,_]),g])}const j=i(m,[["render",b],["__file","nvm.html.vue"]]);export{j as default};
